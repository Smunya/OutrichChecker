import requests
import warnings
import pandas as pd
from urllib.parse import unquote

from utils import normalize_url, detect_encoding, is_ssl_error
from seo_checks import check_robots_txt, check_indexing_directives, check_canonical_tag, check_links_on_page
from indexing_checks import check_google_indexing

# --- –ù–û–í–ê –î–û–ü–û–ú–Ü–ñ–ù–ê –§–£–ù–ö–¶–Ü–Ø –¥–ª—è SEO —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–æ—Å–∏–ª–∞–Ω—å ---
def _perform_seo_and_link_checks(final_url, html_content, get_headers, anchor1, url1, anchor2, url2, anchor3, url3, verify_ssl=True):
    """–í–∏–∫–æ–Ω—É—î –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ robots.txt, –¥–∏—Ä–µ–∫—Ç–∏–≤ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó, canonical —Ç–∞ –ø–æ—Å–∏–ª–∞–Ω—å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ."""
    print(f"   ‚îú‚îÄ‚îÄ –í–∏–∫–æ–Ω—É—î–º–æ SEO —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø–æ—Å–∏–ª–∞–Ω—å –¥–ª—è: {final_url} (SSL Verify: {verify_ssl})")
    seo_results = {
        "robots_star_allowed": None,
        "robots_googlebot_allowed": None,
        "indexing_directives": None,
        "canonical_url": None,
        "seo_check_error": None,
        # –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–æ—Å–∏–ª–∞–Ω—å
        "url1_found": "–ù/–î", "anchor1_match": "–ù/–î", "url1_rel": None,
        "url2_found": "–ù/–î", "anchor2_match": "–ù/–î", "url2_rel": None,
        "url3_found": "–ù/–î", "anchor3_match": "–ù/–î", "url3_rel": None,
        "link_check_error": None
    }
    try:
        # –∞. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ robots.txt
        seo_results["robots_star_allowed"] = check_robots_txt(final_url, '*', verify_ssl=verify_ssl)
        seo_results["robots_googlebot_allowed"] = check_robots_txt(final_url, 'Googlebot', verify_ssl=verify_ssl)

        # b. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Meta Robots / X-Robots-Tag
        seo_results["indexing_directives"] = check_indexing_directives(final_url, get_headers, html_content)

        # c. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Canonical
        seo_results["canonical_url"] = check_canonical_tag(final_url, html_content)

        # d. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Å–∏–ª–∞–Ω—å —Ç–∞ –∞–Ω–∫–æ—Ä—ñ–≤
        link_check_results = check_links_on_page(html_content, final_url, anchor1, url1, anchor2, url2, anchor3, url3)
        # –û–Ω–æ–≤–ª—é—î–º–æ seo_results –ø–æ–ª—è–º–∏ –∑ link_check_results
        seo_results.update(link_check_results)
        if "error" in link_check_results and link_check_results["error"]:
             seo_results["link_check_error"] = link_check_results["error"]
             # –£—Å—É–≤–∞—î–º–æ –ø–æ–ª–µ 'error' –∑ link_check_results, —â–æ–± –≤–æ–Ω–æ –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–ª–æ —ñ–Ω—à—ñ –ø–æ–º–∏–ª–∫–∏
             del seo_results["error"]

    except Exception as seo_e:
        error_msg = f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å SEO/Link –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫: {seo_e}"
        print(f"   ‚îÇ   ‚îî‚îÄ‚îÄ ‚ö†Ô∏è {error_msg}")
        seo_results["seo_check_error"] = error_msg # –ó–∞–ø–∏—Å—É—î–º–æ —è–∫ –ø–æ–º–∏–ª–∫—É SEO/Link

    return seo_results
# --- –ö–Ü–ù–ï–¶–¨ –ù–û–í–û–á –î–û–ü–û–ú–Ü–ñ–ù–û–á –§–£–ù–ö–¶–Ü–á ---


def _process_response(response, url, ssl_disabled=False):
    """–î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ requests —Ç–∞ –≤–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏.
       –ü–æ–≤–µ—Ä—Ç–∞—î –Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π final_url.
    """
    redirect_chain = []
    status_code = response.status_code
    # –ù–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π URL –ø–µ—Ä–µ–¥ —Ç–∏–º, —è–∫ –≤—ñ–Ω –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–æ —Å—Ç–∞–Ω–µ final_url
    final_url = normalize_url(url)
    final_status_code = status_code
    ssl_status_text = "(SSL –≤–∏–º–∫–Ω–µ–Ω–æ)" if ssl_disabled else ""

    if response.history:
        # –ù–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ URL –Ω–∞ –∫–æ–∂–Ω–æ–º—É –∫—Ä–æ—Ü—ñ —Ä–µ–¥–∏—Ä–µ–∫—Ç—É
        redirect_chain = [{
            "url": normalize_url(resp.url),
            "status_code": resp.status_code
        } for resp in response.history]

        print(f"   –õ–∞–Ω—Ü—é–∂–æ–∫ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ñ–≤ {ssl_status_text}:")
        # –í–∏–≤–æ–¥–∏–º–æ –Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ URL —Ä–µ–¥–∏—Ä–µ–∫—Ç—ñ–≤
        [print(f"   {i+1}. {resp['url']} ‚Üí {resp['status_code']}") for i, resp in enumerate(redirect_chain)]

        # –§—ñ–Ω–∞–ª—å–Ω–∏–π URL –ø—ñ—Å–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç—ñ–≤ - –Ω–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ –π–æ–≥–æ
        final_url = normalize_url(response.url)
        final_status_code = response.status_code
        print(f"   –§—ñ–Ω–∞–ª—å–Ω–∏–π URL {ssl_status_text}: {final_url} ‚Üí {final_status_code}")
    else:
        # –Ø–∫—â–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ñ–≤ –Ω–µ –±—É–ª–æ, final_url –≤–∂–µ –Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –Ω–∞ –ø–æ—á–∞—Ç–∫—É
        print(f"   –°—Ç–∞—Ç—É—Å-–∫–æ–¥ {ssl_status_text}: {status_code} (–±–µ–∑ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ñ–≤)")

    return redirect_chain, final_url, final_status_code, status_code

def check_status_code_requests(rows_data, valueserp_api_key=None):
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —Å—Ç–∞—Ç—É—Å-–∫–æ–¥–∏ URL, —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏ —Ç–∞ –≤–∏–∫–æ–Ω—É—î SEO —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–æ—Å–∏–ª–∞–Ω—å."""
    print("\n\nüîç –ü–ï–†–ï–í–Ü–†–ö–ê –°–¢–ê–¢–£–°-–ö–û–î–Ü–í URL, SEO-–ü–ê–†–ê–ú–ï–¢–†–Ü–í –¢–ê –ü–û–°–ò–õ–ê–ù–¨...\n")

    results = []
    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.6167.184 Safari/537.36'}

    for i, row_info in enumerate(rows_data, 1):
        url = row_info.get("Url")
        anchor1 = row_info.get("–ê–Ω–∫–æ—Ä-1")
        url1 = row_info.get("–£—Ä–ª-1")
        anchor2 = row_info.get("–ê–Ω–∫–æ—Ä-2")
        url2 = row_info.get("–£—Ä–ª-2")
        anchor3 = row_info.get("–ê–Ω–∫–æ—Ä-3")
        url3 = row_info.get("–£—Ä–ª-3")

        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ URL
        current_result = {
            "url": url, "status_code": 0, "redirect_chain": [],
            "final_url": url, "final_status_code": 0, "error": None,
            "ssl_disabled": False, "robots_star_allowed": None,
            "robots_googlebot_allowed": None, "indexing_directives": None,
            "canonical_url": None, "seo_check_error": None,
            # –ü–æ–ª—è –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–æ—Å–∏–ª–∞–Ω—å
            "url1_found": "–ù/–î", "anchor1_match": "–ù/–î", "url1_rel": None,
            "url2_found": "–ù/–î", "anchor2_match": "–ù/–î", "url2_rel": None,
            "url3_found": "–ù/–î", "anchor3_match": "–ù/–î", "url3_rel": None,
            "link_check_error": None,
            # –ü–æ–ª–µ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó –≤ Google
            "google_indexing": None
        }

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ
        current_result.update(row_info)

        if not url or pd.isna(url):
            print(f"{i}. URL –ø–æ—Ä–æ–∂–Ω—ñ–π, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ")
            current_result["error"] = "URL –ø–æ—Ä–æ–∂–Ω—ñ–π"
            results.append(current_result)
            continue

        print(f"{i}. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ: {url}")
        ssl_verify = True # –ü–æ—á–∏–Ω–∞—î–º–æ –∑ —É–≤—ñ–º–∫–Ω–µ–Ω–∏–º SSL

        try:
            # 1. –ü–µ—Ä—à–∞ —Å–ø—Ä–æ–±–∞ –∑–∞–ø–∏—Ç—É (–∑ SSL –∞–±–æ –±–µ–∑, –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –ø–æ–º–∏–ª–æ–∫)
            response = requests.head(url, allow_redirects=True, timeout=10, headers=headers, verify=ssl_verify)
            redirect_chain, final_url, final_status_code, status_code = _process_response(response, url)
            current_result.update({
                "status_code": status_code, "redirect_chain": redirect_chain,
                "final_url": final_url, "final_status_code": final_status_code,
                "error": None, "ssl_disabled": not ssl_verify
            })

            # 2. –Ø–∫—â–æ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ç—É—Å 200, –≤–∏–∫–æ–Ω—É—î–º–æ SEO —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø–æ—Å–∏–ª–∞–Ω—å
            if final_status_code == 200:
                try:
                    # –†–æ–±–∏–º–æ GET –∑–∞–ø–∏—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É
                    with requests.get(final_url, timeout=15, headers=headers, verify=ssl_verify) as response_get:
                        response_get.raise_for_status()
                        html_content_bytes = response_get.content
                        encoding = detect_encoding(html_content_bytes)
                        html_content = html_content_bytes.decode(encoding, errors='replace')
                        get_headers = response_get.headers

                        # –í–∏–∫–ª–∏–∫–∞—î–º–æ –Ω–æ–≤—É —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è SEO —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–æ—Å–∏–ª–∞–Ω—å
                        seo_link_results = _perform_seo_and_link_checks(
                            final_url, html_content, get_headers,
                            anchor1, url1, anchor2, url2, anchor3, url3, verify_ssl=ssl_verify
                        )
                        current_result.update(seo_link_results)

                        # 3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó –≤ Google
                        if valueserp_api_key:
                            # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π URL –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó
                            print(f"   ‚îú‚îÄ‚îÄ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—é –≤ Google –¥–ª—è: {final_url}")
                            try:
                                is_indexed, search_query = check_google_indexing(final_url, valueserp_api_key)
                                current_result["google_indexing"] = "–¢–∞–∫" if is_indexed else "–ù—ñ"
                                print(f"   ‚îÇ   ‚îú‚îÄ‚îÄ –ü–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç: {search_query}")
                                print(f"   ‚îÇ   ‚îî‚îÄ‚îÄ {'‚úÖ URL –ø—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω–∏–π' if is_indexed else '‚ùå URL –Ω–µ –ø—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω–∏–π'}")
                            except Exception as index_e:
                                error_msg = f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó: {str(index_e)}"
                                print(f"   ‚îÇ   ‚îî‚îÄ‚îÄ ‚ö†Ô∏è {error_msg}")
                                current_result["google_indexing"] = "–ü–æ–º–∏–ª–∫–∞"
                        else:
                            print(f"   ‚îÇ   ‚îî‚îÄ‚îÄ ‚ÑπÔ∏è –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó (API –∫–ª—é—á –Ω–µ –≤–∫–∞–∑–∞–Ω–æ)")

                except requests.exceptions.RequestException as get_e:
                    error_msg = f"–ü–æ–º–∏–ª–∫–∞ GET-–∑–∞–ø–∏—Ç—É {'(SSL –≤–∏–º–∫–Ω–µ–Ω–æ)' if not ssl_verify else ''}: {get_e}"
                    print(f"   ‚îî‚îÄ‚îÄ ‚ö†Ô∏è {error_msg}")
                    # –ó–∞–ø–∏—Å—É—î–º–æ –ø–æ–º–∏–ª–∫—É —ñ –≤ seo_check_error —ñ –≤ link_check_error, –æ—Å–∫—ñ–ª—å–∫–∏ GET –ø—Ä–æ–≤–∞–ª–∏–≤—Å—è –¥–ª—è –æ–±–æ—Ö
                    current_result["seo_check_error"] = error_msg
                    current_result["link_check_error"] = error_msg
                except Exception as general_e: # –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ–±—Ä–æ–±–∫–∏ GET –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
                    error_msg = f"–ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç—É {'(SSL –≤–∏–º–∫–Ω–µ–Ω–æ)' if not ssl_verify else ''}: {general_e}"
                    print(f"   ‚îî‚îÄ‚îÄ ‚ö†Ô∏è {error_msg}")
                    current_result["seo_check_error"] = error_msg
                    current_result["link_check_error"] = error_msg

        except requests.exceptions.RequestException as e:
            error_text = str(e)
            current_result["status_code"] = 0 # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç—É—Ç, –±–æ –∑–∞–ø–∏—Ç HEAD –Ω–µ –≤–¥–∞–≤—Å—è
            current_result["final_status_code"] = 0

            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ SSL –ø–æ–º–∏–ª–∫—É –¢–Ü–õ–¨–ö–ò –ø—Ä–∏ –ø–µ—Ä—à—ñ–π —Å–ø—Ä–æ–±—ñ (–∫–æ–ª–∏ ssl_verify=True)
            if ssl_verify and is_ssl_error(error_text):
                print(f"   ‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É SSL: {error_text}")
                print(f"   üîÑ –ü–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç –∑ –≤–∏–º–∫–Ω–µ–Ω–æ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é SSL...")
                ssl_verify = False # –í–∏–º–∏–∫–∞—î–º–æ SSL –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ—ó —Å–ø—Ä–æ–±–∏
                current_result["ssl_disabled"] = True # –í—ñ–¥–º—ñ—á–∞—î–º–æ, —â–æ SSL –≤–∏–º–∫–Ω–µ–Ω–æ

                with warnings.catch_warnings():
                    warnings.simplefilter("ignore")
                    try:
                        # –ü–æ–≤—Ç–æ—Ä—é—î–º–æ HEAD –∑–∞–ø–∏—Ç –±–µ–∑ SSL
                        response_nossl = requests.head(url, allow_redirects=True, timeout=10, headers=headers, verify=ssl_verify)
                        redirect_chain, final_url, final_status_code, status_code = _process_response(response_nossl, url, ssl_disabled=True)
                        current_result.update({
                            "status_code": status_code, "redirect_chain": redirect_chain,
                            "final_url": final_url, "final_status_code": final_status_code,
                            "error": "SSL –≤–∏–º–∫–Ω–µ–Ω–æ: " + error_text # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—É –ø–æ–º–∏–ª–∫—É SSL
                        })

                        # –Ø–∫—â–æ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ç—É—Å 200 –ø—ñ—Å–ª—è SSL retry, –≤–∏–∫–æ–Ω—É—î–º–æ SEO —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø–æ—Å–∏–ª–∞–Ω—å
                        if final_status_code == 200:
                            try:
                                # –†–æ–±–∏–º–æ GET –∑–∞–ø–∏—Ç –±–µ–∑ SSL
                                with requests.get(final_url, timeout=15, headers=headers, verify=ssl_verify) as response_get_nossl:
                                    response_get_nossl.raise_for_status()
                                    html_content_bytes = response_get_nossl.content
                                    encoding = detect_encoding(html_content_bytes)
                                    html_content = html_content_bytes.decode(encoding, errors='replace')
                                    get_headers = response_get_nossl.headers

                                    # –í–∏–∫–ª–∏–∫–∞—î–º–æ –Ω–æ–≤—É —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è SEO —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–æ—Å–∏–ª–∞–Ω—å
                                    seo_link_results = _perform_seo_and_link_checks(
                                        final_url, html_content, get_headers,
                                        anchor1, url1, anchor2, url2, anchor3, url3, verify_ssl=ssl_verify
                                    )
                                    current_result.update(seo_link_results)

                                    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó –≤ Google
                                    if valueserp_api_key:
                                        print(f"   ‚îú‚îÄ‚îÄ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—é –≤ Google –¥–ª—è: {final_url} (SSL –≤–∏–º–∫–Ω–µ–Ω–æ)")
                                        try:
                                            is_indexed, search_query = check_google_indexing(final_url, valueserp_api_key)
                                            current_result["google_indexing"] = "–¢–∞–∫" if is_indexed else "–ù—ñ"
                                            print(f"   ‚îÇ   ‚îú‚îÄ‚îÄ –ü–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç: {search_query}")
                                            print(f"   ‚îÇ   ‚îî‚îÄ‚îÄ {'‚úÖ URL –ø—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω–∏–π' if is_indexed else '‚ùå URL –Ω–µ –ø—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω–∏–π'}")
                                        except Exception as index_e:
                                            error_msg = f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó: {str(index_e)}"
                                            print(f"   ‚îÇ   ‚îî‚îÄ‚îÄ ‚ö†Ô∏è {error_msg}")
                                            current_result["google_indexing"] = "–ü–æ–º–∏–ª–∫–∞"
                                    else:
                                        print(f"   ‚îÇ   ‚îî‚îÄ‚îÄ ‚ÑπÔ∏è –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó (API –∫–ª—é—á –Ω–µ –≤–∫–∞–∑–∞–Ω–æ)")

                            except requests.exceptions.RequestException as get_e:
                                error_msg = f"–ü–æ–º–∏–ª–∫–∞ GET-–∑–∞–ø–∏—Ç—É (SSL –≤–∏–º–∫–Ω–µ–Ω–æ): {get_e}"
                                print(f"   ‚îî‚îÄ‚îÄ ‚ö†Ô∏è {error_msg}")
                                current_result["seo_check_error"] = error_msg
                                current_result["link_check_error"] = error_msg
                            except Exception as general_e:
                                error_msg = f"–ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç—É (SSL –≤–∏–º–∫–Ω–µ–Ω–æ): {general_e}"
                                print(f"   ‚îî‚îÄ‚îÄ ‚ö†Ô∏è {error_msg}")
                                current_result["seo_check_error"] = error_msg
                                current_result["link_check_error"] = error_msg

                    except requests.exceptions.RequestException as e2:
                        # –ü–æ–º–∏–ª–∫–∞ –Ω–∞–≤—ñ—Ç—å –∑ –≤–∏–º–∫–Ω–µ–Ω–∏–º SSL
                        final_error = f"–ü–æ–º–∏–ª–∫–∞ HEAD —ñ –∑ –≤–∏–º–∫–Ω–µ–Ω–∏–º SSL: {str(e2)}"
                        current_result["error"] = final_error # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—É—î–º–æ –ø–æ–º–∏–ª–∫—É
                        current_result["status_code"] = 0 # –°—Ç–∞—Ç—É—Å –Ω–µ–≤—ñ–¥–æ–º–∏–π
                        current_result["final_status_code"] = 0
                        print(f"   ‚ùå {final_error}")

            else: # –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ –Ω–µ SSL, –∞–±–æ —Ü–µ –≤–∂–µ –¥—Ä—É–≥–∞ —Å–ø—Ä–æ–±–∞ (–∑ –≤–∏–º–∫–Ω–µ–Ω–∏–º SSL)
                current_result["error"] = error_text # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –ø–æ–º–∏–ª–∫—É
                print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞ HEAD: {current_result['error']}")
                # status_code —Ç–∞ final_status_code –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ –Ω–∞ 0 –Ω–∞ –ø–æ—á–∞—Ç–∫—É –±–ª–æ–∫—É except

        results.append(current_result)
        print("---")

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫
    stats = {
        "–≤—Å—å–æ–≥–æ": len(results),
        "—É—Å–ø—ñ—à–Ω—ñ_200_–∑_–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞–º–∏": sum(1 for r in results if r["final_status_code"] == 200 and not r.get("seo_check_error") and not r.get("link_check_error")),
        "–ø–æ–º–∏–ª–∫–∏_seo_link": sum(1 for r in results if r["final_status_code"] == 200 and (r.get("seo_check_error") or r.get("link_check_error"))),
        # –ó–º—ñ–Ω–µ–Ω–æ –ª–æ–≥—ñ–∫—É –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –ø–æ–º–∏–ª–æ–∫ –∑–∞–ø–∏—Ç—É - —Ü–µ –ø–æ–º–∏–ª–∫–∏ HEAD/GET, —è–∫—ñ –ù–ï –ø—Ä–∏–∑–≤–µ–ª–∏ –¥–æ —Å—Ç–∞—Ç—É—Å—É 200
        "–ø–æ–º–∏–ª–∫–∏_–∑–∞–ø–∏—Ç—É": sum(1 for r in results if r.get("error") and r["final_status_code"] != 200),
        "ssl_–≤–∏–º–∫–Ω–µ–Ω–æ": sum(1 for r in results if r["ssl_disabled"]),
        "—ñ–Ω—à—ñ_–∫–æ–¥–∏": sum(1 for r in results if r["final_status_code"] not in [0, 200] and not r["error"]), # –ö–æ–¥–∏, —è–∫—ñ –Ω–µ 0 –∞–±–æ 200 —ñ –±–µ–∑ –ø–æ–º–∏–ª–æ–∫ –∑–∞–ø–∏—Ç—É
        "–ø—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω—ñ": sum(1 for r in results if r.get("google_indexing") == "–¢–∞–∫"),
        "–Ω–µ_–ø—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω—ñ": sum(1 for r in results if r.get("google_indexing") == "–ù—ñ"),
        "–ø–æ–º–∏–ª–∫–∏_—ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó": sum(1 for r in results if r.get("google_indexing") == "–ü–æ–º–∏–ª–∫–∞")
    }

    # –û–Ω–æ–≤–ª—é—î–º–æ –≤–∏–≤—ñ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–ò –ü–ï–†–ï–í–Ü–†–ö–ò {stats['–≤—Å—å–æ–≥–æ']} URL:")
    print(f"‚úÖ –£—Å–ø—ñ—à–Ω—ñ –∑–∞–ø–∏—Ç–∏ (200) –∑ SEO —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –ø–æ—Å–∏–ª–∞–Ω—å: {stats['—É—Å–ø—ñ—à–Ω—ñ_200_–∑_–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞–º–∏']}")
    print(f"‚ö†Ô∏è –£—Å–ø—ñ—à–Ω—ñ –∑–∞–ø–∏—Ç–∏ (200) –∑ –ø–æ–º–∏–ª–∫–∞–º–∏ SEO/–ø–æ—Å–∏–ª–∞–Ω—å: {stats['–ø–æ–º–∏–ª–∫–∏_seo_link']}")
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∏ –∑–∞–ø–∏—Ç—É: {stats['–ø–æ–º–∏–ª–∫–∏_–∑–∞–ø–∏—Ç—É']}")
    print(f"üîÑ –ó–∞–ø–∏—Ç–∏ –∑ –≤–∏–º–∫–Ω–µ–Ω–∏–º SSL: {stats['ssl_–≤–∏–º–∫–Ω–µ–Ω–æ']}")
    print(f"‚ÑπÔ∏è –Ü–Ω—à—ñ —Å—Ç–∞—Ç—É—Å-–∫–æ–¥–∏: {stats['—ñ–Ω—à—ñ_–∫–æ–¥–∏']}")
    
    # –î–æ–¥–∞—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó
    if valueserp_api_key:
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–ò –ü–ï–†–ï–í–Ü–†–ö–ò –Ü–ù–î–ï–ö–°–ê–¶–Ü–á –í GOOGLE:")
        print(f"‚úÖ –ü—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω—ñ URL: {stats['–ø—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω—ñ']}")
        print(f"‚ùå –ù–µ –ø—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω—ñ URL: {stats['–Ω–µ_–ø—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω—ñ']}")
        print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó: {stats['–ø–æ–º–∏–ª–∫–∏_—ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó']}")
        print(f"‚ÑπÔ∏è –ù–µ –ø–µ—Ä–µ–≤—ñ—Ä—è–ª–∏—Å—è (–Ω–µ–º–∞—î 200 —Å—Ç–∞—Ç—É—Å—É): {stats['–≤—Å—å–æ–≥–æ'] - stats['–ø—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω—ñ'] - stats['–Ω–µ_–ø—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω—ñ'] - stats['–ø–æ–º–∏–ª–∫–∏_—ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó']}")

    return results 